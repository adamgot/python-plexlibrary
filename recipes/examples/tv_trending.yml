# Supported types: movie, tv
library_type: 'tv'

# Source list(s)
# * Experiment with the limits and order of the URLs below
#   to get a different balance.
source_list_urls:
  - 'https://api.trakt.tv/shows/trending?limit=5'
  - 'https://api.trakt.tv/shows/watched/weekly?limit=20'
  - 'https://api.trakt.tv/shows/watched/monthly?limit=50'
  - 'https://api.trakt.tv/shows/watched/yearly?limit=100'

# Source library details
source_libraries:
  - name: 'TV Shows'
    folders:
      - '/path/to/TV Shows'
      - '/path/to/More TV Shows'
  - name: 'Different Shows'
    folders:
      - '/path/to/Different Shows'

# New playlist details
new_playlist:
  name: 'TV - Trending'
  # Limit the age (in years) of items to be considered
  # * 0 for no limit
  max_age: 0
  # Maximum number of items to keep in the library
  max_count: 250
  # Remove items that no longer exist in the source lists
  remove_from_playlist: false
  share_to_users:
    - username1
    - username2
    - username3
  share_to_all: false

# New library details
new_library:
  name: 'TV - Trending'
  folder: '/path/to/symlink/supporting/filesystem/TV - Trending/'
  sort: true
  sort_title:
    format: '{number}. {title}'
    visible: false
    absolute: false  # Skips numbers for missing items
  # Limit the age (in years) of items to be considered
  # * 0 for no limit
  max_age: 0
  # Maximum number of items to keep in the library
  max_count: 250
  # Remove items that no longer exist in the source lists
  remove_from_library: false

# Weighted sorting (requires TMDb API)
weighted_sorting:
  enabled: true
  better_release_date: false
  weights:
    # Think of these as percentages,
    # but they don't have to add up to 1.0
    # * Additive
    # * Higher value -> more important
    index: 0.75
    vote: 0.10
    age: 0.15
    random: 0.0
    # Penalize (<0) or reward (>0) certain (TMDb) genres
    # * Final weight is multipled by these values
    genre_bias:
      'Comedy': 0.9

